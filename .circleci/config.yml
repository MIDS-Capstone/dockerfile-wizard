image_config: &image_config

  # make sure to set your Docker Hub username & password in CircleCI,
  # either as project-specific environment variables
  # or as resources in your organization's org-global Context

version: 2
jobs:
  build:
    machine: 
        enabled: true
        docker_layer_caching: true
        
    environment:
      <<: *image_config

    steps:
      - checkout
      
      # API Key:
      #cWQxdW4ydmxnc2pvcnNtNW5rcTA0dnY0Yzk6MjQxMTc2ZjMtMDEyNi00NDk2LWFlZmYtMmYwMWRmODQ2ZTBi
      - run: docker login nvcr.io -u \$oauthtoken -p $NVIDIA_DOCKER_OAUTH_KEY
      - run: docker pull nvcr.io/nvidia/tensorflow:18.08-py3
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run: docker build -t $DOCKER_ORGANIZATION/$DOCKER_IMAGE_NAME:${CIRCLE_BRANCH} .
      - run: docker push $DOCKER_ORGANIZATION/$DOCKER_IMAGE_NAME:${CIRCLE_BRANCH} && sleep 10

      - store_artifacts:
          path: Dockerfile

  test_image:
    docker:
      - image: $DOCKER_ORGANIZATION/$DOCKER_IMAGE_NAME:${CIRCLE_BRANCH}
        environment:
          <<: *image_config

    steps:
      - checkout

      - run:
          name: start Xvfb for phantomjs test
          command: Xvfb :99
          background: true

      - run:
          name: bats tests
          command: |
            mkdir -p test_results/bats
            bats scripts/tests.bats | \
            perl scripts/tap-to-junit.sh > \
            test_results/bats/results.xml

      - store_test_results:
          path: test_results

      - store_artifacts:
          path: test_results
          
  deploy_image:
    docker:
      - image: $DOCKER_ORGANIZATION/$DOCKER_IMAGE_NAME:${CIRCLE_BRANCH}
        environment:
          <<: *image_config

    steps:
      - checkout
      
      
workflows:
  version: 2
  dockerfile_wizard:
    jobs:
      - build:
          context: DOCKER_HUB

      - test_image:
          context: DOCKER_HUB
          requires:
            - build
            
      - deploy_image:
          context: DOCKER_HUB
          requires:
            - test_image
          branches:
            only:
              - master
